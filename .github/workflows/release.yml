name: Publicar

on:
  workflow_dispatch

jobs:
  extract-version:
    uses: ./.github/workflows/extract-version.yml
  release:
    runs-on: ubuntu-latest
    needs: extract-version
    env:
      RELEASE_VERSION: ${{ needs.extract-version.outputs.releaseVersion }}
      NEXT_MINOR_VERSION: ${{ needs.extract-version.outputs.nextMinorVersion }}
      NEXT_PATCH_VERSION: ${{ needs.extract-version.outputs.nextPatchVersion }}
      X_VERSION: ${{ needs.extract-version.outputs.xVersion }}
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
      - name: Configurar JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'
          cache: 'maven'
      - name: Configura usuário do Git
        run: |
          git config user.name ${{ vars.COMMIT_USER_NAME }}
          git config user.email ${{ vars.COMMIT_USER_EMAIL }}
      - name: Lançar versão e iniciar proxíma versão menor
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        run: |
          mvn -B release:prepare -DdevelopmentVersion=$NEXT_MINOR_VERSION-SNAPSHOT
          mvn -B release:perform
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Lançar versão e iniciar proxíma versão de correção
        if: ${{ startsWith(github.ref_name, 'release/' )}}
        run: |
          mvn -B release:prepare -DdevelopmentVersion=$NEXT_PATCH_VERSION-SNAPSHOT
          mvn -B release:perform
        env:
          GITHUB_TOKEN: ${{ github.token }}


      - name: Push
        run: |
          git push
          git push origin v$RELEASE_VERSION

  create-patch-branch:
    uses: ./.github/workflows/create-patch-branch.yml
    needs: [extract-version, release]
    with:
      target: ${{ needs.extract-version.outputs.releaseVersion }}
    
    
  create-github-release:
    uses: ./.github/workflows/create-github-release.yml
    needs: [extract-version, release]
    with:
      target: ${{ needs.extract-version.outputs.releaseVersion }}