name: Publicar

on:
  workflow_dispatch

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Configurar JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'
          cache: 'maven'

      - uses: actions/checkout@v3
        with:
          ref: master
          path: .master
          token: ${{ steps.generate_token.outputs.token }}
      - id: extract-version
        uses: ./.master/.github/actions/extract-version

      - name: Configura usuário do Git
        run: |
          git config user.name ${{ vars.COMMIT_USER_NAME }}
          git config user.email ${{ vars.COMMIT_USER_EMAIL }}

      - name: Lançar versão e iniciar proxíma versão menor
        env:
          NEXT_MINOR_VERSION: ${{ steps.extract-version.outputs.nextMinorVersion }}
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        run: |
          mvn -B release:prepare -DdevelopmentVersion=$NEXT_MINOR_VERSION-SNAPSHOT

      - name: Lançar versão e iniciar proxíma versão de correção
        env:
          NEXT_PATCH_VERSION: ${{ steps.extract-version.outputs.nextPatchVersion }}
        if: ${{ startsWith(github.ref_name, 'release/' )}}
        run: |
          mvn -B release:prepare -DdevelopmentVersion=$NEXT_PATCH_VERSION-SNAPSHOT

      - name: Push
        env:
          RELEASE_VERSION: ${{ steps.extract-version.outputs.releaseVersion }}
        run: |
          git push
          git push origin v$RELEASE_VERSION
