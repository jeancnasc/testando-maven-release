name: Publicar

on:
  workflow_dispatch



jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Configurar JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'
          cache: 'maven'
      - name: Configura usuário do Git
        run: |
          git config user.name github-actions
          git config user.email noreply@github.com
      - name: Preparar variáveis
        run: |
          majorNumber=$(mvn build-helper:parse-version help:evaluate -Dexpression=parsedVersion.majorVersion -q -DforceStdout)
          minorNumber=$(mvn build-helper:parse-version help:evaluate -Dexpression=parsedVersion.minorVersion -q -DforceStdout)
          incrementalNumber=$(mvn build-helper:parse-version help:evaluate -Dexpression=parsedVersion.incrementalVersion -q -DforceStdout)
          nextMinorNumber=$(mvn build-helper:parse-version help:evaluate -Dexpression=parsedVersion.nextMinorVersion -q -DforceStdout)
          nextIncrementalNumber=$(mvn build-helper:parse-version help:evaluate -Dexpression=parsedVersion.nextIncrementalVersion -q -DforceStdout)
          xVersion=$majorNumber.$minorNumber.x
          releaseVersion=$majorNumber.$minorNumber.$incrementalNumber
          nextMinorVersion=$majorNumber.$nextMinorNumber.0
          nextIncrementalVersion=$majorNumber.$minorNumber.$nextIncrementalNumber
          echo "releaseVersion=$releaseVersion" >> "$GITHUB_ENV"
          echo "xVersion=$xVersion" >> "$GITHUB_ENV"
          echo "nextIncrementalVersion=$nextIncrementalVersion" >> "$GITHUB_ENV"
          echo "nextMinorVersion=$nextMinorVersion" >> "$GITHUB_ENV"
      - name: Lançar versão e iniciar proxíma versão menor
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        run: |
          mvn -B release:prepare -DdevelopmentVersion=$nextMinorVersion-SNAPSHOT
          git push
          git push origin v$releaseVersion
          mvn -B release:perform
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Lançar versão e iniciar proxíma versão de correção
        if: ${{ startsWith(github.ref_name, 'release/' )}}
        run: |
          mvn -B release:prepare -DdevelopmentVersion=$nextIncrementalVersion-SNAPSHOT
          git push
          git push origin v$releaseVersion
          mvn -B release:perform
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - run: mkdir artifacts
      - name: Construir Artefatos
        run: mvn -B package --file pom.xml dependency:copy -Dartifact=\${project.groupId}:\${project.artifactId}:$releaseVersion -DoutputDirectory=artifacts
      - name: Criar Release
        id: create_release
        run: gh release create v$releaseVersion artifacts/*.jar --title=v$releaseVersion --generate-notes --verify-tag
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Criando branch de correção
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        run: |
          git checkout tags/v$releaseVersion -b release/v$xVersion
          mvn -B release:update-versions -DdevelopmentVersion=$nextIncrementalVersion-SNAPSHOT
          git add pom.xml
          git commit -m "release: iniciando próxima versão (v$nextIncrementalVersion-SNAPSHOT)"
          git push origin release/v$xVersion
